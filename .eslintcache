[{"/Users/yjs/Documents/GitHub/ywitter/src/index.js":"1","/Users/yjs/Documents/GitHub/ywitter/src/components/App.js":"2","/Users/yjs/Documents/GitHub/ywitter/src/fbase.js":"3","/Users/yjs/Documents/GitHub/ywitter/src/components/Router.js":"4","/Users/yjs/Documents/GitHub/ywitter/src/components/Navigation.js":"5","/Users/yjs/Documents/GitHub/ywitter/src/routes/Profile.js":"6","/Users/yjs/Documents/GitHub/ywitter/src/routes/Home.js":"7","/Users/yjs/Documents/GitHub/ywitter/src/routes/Auth.js":"8","/Users/yjs/Documents/GitHub/ywitter/src/components/Yweet.js":"9","/Users/yjs/Documents/GitHub/ywitter/src/components/YweetFactory.js":"10","/Users/yjs/Documents/GitHub/ywitter/src/components/AuthForm.js":"11"},{"size":231,"mtime":1608285932808,"results":"12","hashOfConfig":"13"},{"size":1150,"mtime":1608217440421,"results":"14","hashOfConfig":"13"},{"size":730,"mtime":1607749442886,"results":"15","hashOfConfig":"13"},{"size":1125,"mtime":1608251849178,"results":"16","hashOfConfig":"13"},{"size":1114,"mtime":1608251046121,"results":"17","hashOfConfig":"13"},{"size":1541,"mtime":1608286262854,"results":"18","hashOfConfig":"13"},{"size":916,"mtime":1608286138884,"results":"19","hashOfConfig":"13"},{"size":1322,"mtime":1608286060790,"results":"20","hashOfConfig":"13"},{"size":2392,"mtime":1608286429558,"results":"21","hashOfConfig":"13"},{"size":2764,"mtime":1608251774028,"results":"22","hashOfConfig":"13"},{"size":1884,"mtime":1608250970168,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"12geqcn",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/yjs/Documents/GitHub/ywitter/src/index.js",[],["52","53"],"/Users/yjs/Documents/GitHub/ywitter/src/components/App.js",[],"/Users/yjs/Documents/GitHub/ywitter/src/fbase.js",[],"/Users/yjs/Documents/GitHub/ywitter/src/components/Router.js",[],"/Users/yjs/Documents/GitHub/ywitter/src/components/Navigation.js",[],"/Users/yjs/Documents/GitHub/ywitter/src/routes/Profile.js",["54","55","56"],"import React, { useState } from \"react\";\nimport { authService, dbService } from \"../fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n  const getMyYweets = async () => {\n    const yweets = await dbService\n      .collection(\"yweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\", \"desc\")\n      .get();\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          type=\"text\"\n          placeholder=\"Display name\"\n          autoFocus\n          onChange={onChange}\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","/Users/yjs/Documents/GitHub/ywitter/src/routes/Home.js",["57","58"],"import React, { useEffect, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { dbService, storageService } from \"../fbase\";\nimport Yweet from \"../components/Yweet\";\nimport YweetFactory from \"../components/YweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [yweets, setYweets] = useState([]);\n  useEffect(() => {\n    dbService.collection(\"yweets\").onSnapshot((snapshot) => {\n      const yweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setYweets(yweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <YweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {yweets.map((yweet) => (\n          <Yweet\n            key={yweet.id}\n            yweetObj={yweet}\n            isOwner={yweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/yjs/Documents/GitHub/ywitter/src/routes/Auth.js",[],"/Users/yjs/Documents/GitHub/ywitter/src/components/Yweet.js",["59"],"import React, { useState } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Yweet = ({ yweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newYweet, setNewYweet] = useState(yweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this yweet?\");\n    if (ok) {\n      await dbService.doc(`yweets/${yweetObj.id}`).delete();\n      await storageService.refFromURL(yweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`yweets/${yweetObj.id}`).update({\n      text: newYweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewYweet(value);\n  };\n  return (\n    <div className=\"yweet\">\n      {editing ? (\n        <>\n          {isOwner && (\n            <>\n              <form onSubmit={onsubmit} className=\"container yweetEdit\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Edit your yweet\"\n                  value={newYweet}\n                  required\n                  autoFocus\n                  onChange={onChange}\n                  className=\"formInput\"\n                />\n                <input\n                  type=\"submit\"\n                  value=\"Update Yweet\"\n                  onClick={onSubmit}\n                  className=\"formBtn\"\n                />\n              </form>\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                Cancel\n              </span>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <h4>{yweetObj.text}</h4>\n          {yweetObj.attachmentUrl && <img src={yweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div className=\"yweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Yweet;\n",["60","61"],"/Users/yjs/Documents/GitHub/ywitter/src/components/YweetFactory.js",["62"],"import React, { useState } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst YweetFactory = ({ userObj }) => {\n  const [yweet, setYweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    if (yweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const yweetObj = {\n      text: yweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"yweets\").add(yweetObj);\n    setYweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setYweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={yweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\nexport default YweetFactory;\n","/Users/yjs/Documents/GitHub/ywitter/src/components/AuthForm.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":5,"column":1,"nodeType":"69","endLine":59,"endColumn":3},{"ruleId":"70","severity":1,"message":"71","line":27,"column":9,"nodeType":"72","messageId":"73","endLine":27,"endColumn":20},{"ruleId":"70","severity":1,"message":"74","line":28,"column":11,"nodeType":"72","messageId":"73","endLine":28,"endColumn":17},{"ruleId":"70","severity":1,"message":"75","line":2,"column":16,"nodeType":"72","messageId":"73","endLine":2,"endColumn":22},{"ruleId":"70","severity":1,"message":"76","line":3,"column":21,"nodeType":"72","messageId":"73","endLine":3,"endColumn":35},{"ruleId":"77","severity":1,"message":"78","line":62,"column":38,"nodeType":"79","endLine":62,"endColumn":74},{"ruleId":"63","replacedBy":"80"},{"ruleId":"65","replacedBy":"81"},{"ruleId":"77","severity":1,"message":"78","line":82,"column":11,"nodeType":"79","endLine":87,"endColumn":13},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'getMyYweets' is assigned a value but never used.","Identifier","unusedVar","'yweets' is assigned a value but never used.","'uuidv4' is defined but never used.","'storageService' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["82"],["83"],"no-global-assign","no-unsafe-negation"]